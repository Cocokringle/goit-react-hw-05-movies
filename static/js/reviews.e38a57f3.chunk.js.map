{"version":3,"file":"static/js/reviews.e38a57f3.chunk.js","mappings":"8MAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,oDID/E,SAASC,IACpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,kBAAsBN,GAAUO,MAAK,SAAAC,GAAI,OAAIJ,EAAW,EAAII,EAAKC,eAClE,CAACT,IAEmB,IAAnBG,EAAQO,QACD,qEAIP,8BACCP,IACG,wBACKA,EAAQQ,KAAI,SAAAC,GAAM,OACf,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFNF,EAAOG,a,yECnB9BC,EAAM,mCAEZC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,IAAAA,IAAA,sCAAyCD,IADxC,cAClBG,EADkB,yBAEjBA,EAASX,MAFQ,2CAAH,qDAKnBY,EAAkB,mCAAG,WAAOC,GAAP,uFACAJ,IAAAA,IAAA,iBAAoBI,EAAQrB,SAA5B,oBAAgDgB,EAAhD,oBADA,cACjBG,EADiB,yBAEhBA,EAASX,MAFO,2CAAH,sDAKlBc,EAAgB,mCAAG,WAAOC,GAAP,uFACEN,IAAAA,IAAA,gCAAmCD,EAAnC,iCAA+DO,EAA/D,gCADF,cACfJ,EADe,yBAEdA,EAASX,MAFK,2CAAH,sDAKhBgB,EAAc,mCAAG,WAAOH,GAAP,uFACIJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADJ,cACbG,EADa,yBAEZA,EAASX,MAFG,2CAAH,sDAKdiB,EAAiB,mCAAG,WAAOJ,GAAP,uFACCJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADD,cAChBG,EADgB,yBAEfA,EAASX,MAFM,2CAAH,sDAKjBF,EAAM,CACRY,oBAAAA,EACAE,mBAAAA,EACAE,iBAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Reviews/Reviews.js","services/movies-api.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import api from 'services/movies-api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews(){\n    const { moviesId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        api.fetchMovieReviews(moviesId).then(data => setReviews([...data.results]))\n    }, [moviesId])\n\n    if (reviews.length === 0) {\n        return <p>We don't have any reviews for this movie</p>;\n    }\n\n    return (\n        <>\n        {reviews && (\n            <ul>\n                {reviews.map(review => (\n                    <li key={review.id} >\n                        <h3>Author: {review.author}</h3>\n                        <p>{review.content}</p>\n                    </li>\n                ))}\n            </ul>\n        )}\n        </>\n    )\n}","import axios from 'axios';\n\nconst KEY = '8f3b565dfa705a44083795264ed307ec'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nconst fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`);\n    return response.data\n}\n\nconst fetchSearchMovie = async (searchQuery) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n    return response.data\n}\n\nconst fetchMovieCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n    fetchMovieReviews,\n};\n  \nexport default api;"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Reviews","moviesId","useParams","useState","reviews","setReviews","useEffect","api","then","data","results","length","map","review","author","content","id","KEY","axios","fetchTrendingMovies","response","fetchMoviesDetails","movieId","fetchSearchMovie","searchQuery","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}