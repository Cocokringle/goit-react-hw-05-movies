{"version":3,"file":"static/js/cast.3a9bc26c.chunk.js","mappings":"6MAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,iDIA/E,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,eAAmBN,GAASO,MAAK,gBAAEJ,EAAF,EAAEA,KAAF,OAAYC,EAAQ,EAAID,SAC1D,CAACH,KAIA,8BACCG,IACO,wBACCA,EAAKK,KAAI,SAAAC,GAAK,OACX,2BACI,gBAAKC,IAAG,yCAAoCD,EAAME,cAAgBC,IAAKH,EAAMI,QAC7E,wBAAKJ,EAAMI,QACX,wCAAgBJ,EAAMK,eAHjBL,EAAMM","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/MovieDetailsPage/Cast/Cast.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/movies-api';\n\n\nexport default function Cast (){\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n        api.fetchMovieCast(movieId).then(({cast}) => setCast([...cast]))\n    }, [movieId])\n\n\n    return (\n        <>\n        {cast && (\n                <ul>\n                {cast.map(actor => (\n                    <li key={actor.id}>\n                        <img src={`https://image.tmdb.org/t/p/w342${actor.profile_path}`} alt={actor.name} />\n                        <h3>{actor.name}</h3>\n                        <h4>Character: {actor.character}</h4>\n                    </li>\n                ))}\n            </ul>\n        )}\n        \n        </>\n\n    )\n}"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Cast","movieId","useParams","useState","cast","setCast","useEffect","api","then","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}