{"version":3,"file":"static/js/movies-page.8740dd57.chunk.js","mappings":"oLAEe,SAASA,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,SAC3C,OACI,mBAAQF,KAAMA,EAAMC,QAASA,EAA7B,SACKC,IAKbH,EAAOI,aAAe,CAClBF,QAAS,kBAAM,MACfC,SAAU,O,qHCTC,SAASE,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,OAC3C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,OACI,kBAAMC,SAAU,SAAAC,GACZA,EAAEC,iBACEJ,GAGJH,EAAUG,IALd,WAOI,kBAAOR,KAAK,OACRa,YAAW,OAAEP,QAAF,IAAEA,EAAAA,EAAU,sBACvBQ,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOC,WAErC,SAACjB,EAAA,EAAD,CAAQC,KAAK,SAAb,uB,wBCdG,SAASiB,EAAT,GAA+B,IAAVX,EAAS,EAATA,OAChC,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOW,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OARAC,EAAAA,EAAAA,YAAU,WACFhB,GAIJiB,EAAAA,EAAAA,iBAAqBjB,GAAQkB,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,cAC1D,CAACpB,KAGA,8BACCY,IACG,wBACKA,EAAOS,KAAI,SAAAC,GAAK,OACb,yBACK,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMZ,EAAUa,MAAO,gBAAzD,SAA4EL,EAAMM,SAD9EN,EAAME,WCfpB,SAASK,IACpB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhC,EAAS+B,EAAaE,IAAI,UAEhC,OACI,4BACA,SAACnC,EAAD,CAAYC,UAAW,SAAAC,GAAM,OAAIgC,EAAgB,CAAEhC,OAAAA,KACnDA,OAAQA,KACR,SAACW,EAAD,CAAYX,OAAQA,S,yECXtBkC,EAAM,mCAEZC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,IAAAA,IAAA,sCAAyCD,IADxC,cAClBG,EADkB,yBAEjBA,EAASlB,MAFQ,2CAAH,qDAKnBmB,EAAkB,mCAAG,WAAOC,GAAP,uFACAJ,IAAAA,IAAA,iBAAoBI,EAAQC,SAA5B,oBAAgDN,EAAhD,oBADA,cACjBG,EADiB,yBAEhBA,EAASlB,MAFO,2CAAH,sDAKlBsB,EAAgB,mCAAG,WAAOC,GAAP,uFACEP,IAAAA,IAAA,gCAAmCD,EAAnC,iCAA+DQ,EAA/D,gCADF,cACfL,EADe,yBAEdA,EAASlB,MAFK,2CAAH,sDAKhBwB,EAAc,mCAAG,WAAOJ,GAAP,uFACIJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADJ,cACbG,EADa,yBAEZA,EAASlB,MAFG,2CAAH,sDAKdyB,EAAiB,mCAAG,WAAOL,GAAP,uFACCJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADD,cAChBG,EADgB,yBAEfA,EAASlB,MAFM,2CAAH,sDAKjBF,EAAM,CACRmB,oBAAAA,EACAE,mBAAAA,EACAG,iBAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ","sources":["components/Button/Button.js","components/MoviesForm/MoviesForm.js","components/MoviesList/MoviesList.js","pages/MoviesPage/MoviesPage.js","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Button({type, onClick, children}){\n    return (\n        <button type={type} onClick={onClick}>\n            {children}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    onClick: () => null,\n    children: null,\n};\n  \nButton.propTypes = {\n    type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n};","import { useState } from 'react';\nimport Button from 'components/Button/Button';\n\nexport default function MoviesForm({forSearch, search}) {\n    const [input, setInput] = useState('');\n\n    return (\n        <form onSubmit={e => {\n            e.preventDefault();\n            if(!input){\n                return;\n            }\n            forSearch(input);\n          }}>\n            <input type=\"text\"\n                placeholder={search ?? 'Look for a movie...'}\n                onChange={e => setInput(e.target.value)}\n            />\n            <Button type=\"submit\">\n                Search\n            </Button>\n        </form>\n    )\n}","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport api from 'services/movies-api';\n\nexport default function MoviesList({search}) {\n    const [movies, setMovies] = useState()\n    const location = useLocation()\n    useEffect(() => {\n        if(!search){\n            return;\n        }\n\n        api.fetchSearchMovie(search).then(data => setMovies(data.results))\n    }, [search])\n\n    return (\n        <>\n        {movies && (\n            <ul>\n                {movies.map(movie => (\n                    <li key={movie.id}>\n                         <Link to={`${movie.id}`} state={{ from: location, label: 'Go to Search' }}>{movie.title}</Link>\n                    </li>\n                ))}\n            </ul>\n        )}\n        </>\n    )\n}","\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesForm from 'components/MoviesForm/MoviesForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function MoviesPage(){\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search'); \n\n    return (\n        <div>\n        <MoviesForm forSearch={search => setSearchParams({ search })}\n        search={search}/>\n        <MoviesList search={search}/>\n        </div>\n\n    )\n}","import axios from 'axios';\n\nconst KEY = '8f3b565dfa705a44083795264ed307ec'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nconst fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`);\n    return response.data\n}\n\nconst fetchSearchMovie = async (searchQuery) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n    return response.data\n}\n\nconst fetchMovieCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n    fetchMovieReviews,\n};\n  \nexport default api;"],"names":["Button","type","onClick","children","defaultProps","MoviesForm","forSearch","search","useState","input","setInput","onSubmit","e","preventDefault","placeholder","onChange","target","value","MoviesList","movies","setMovies","location","useLocation","useEffect","api","then","data","results","map","movie","to","id","state","from","label","title","MoviesPage","useSearchParams","searchParams","setSearchParams","get","KEY","axios","fetchTrendingMovies","response","fetchMoviesDetails","movieId","moviesId","fetchSearchMovie","searchQuery","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}