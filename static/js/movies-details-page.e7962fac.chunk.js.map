{"version":3,"file":"static/js/movies-details-page.e7962fac.chunk.js","mappings":"sKACA,MAAwB,2B,SCCT,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAA8BF,M,2HCFvC,EAAsB,8BAAtB,EAAkE,sCAAlE,EAAqH,qC,SCM/GG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IACpB,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,MAOhB,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,mBAAuBH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,QAC5D,CAACL,KAGA,8BACCF,IACD,iCACA,SAACT,EAAA,EAAD,CAAaC,KAAMQ,EAAOQ,SAC1B,iBAAKf,UAAWgB,EAAhB,WACA,gBAAKC,IAAG,yCAAoCV,EAAOW,aAAeC,IAAKZ,EAAOQ,SAC9E,iBAAKf,UAAWgB,EAAhB,WACI,wBAAKT,EAAOQ,SACV,wCAAsC,GAAtBR,EAAOa,aAAvB,QACA,sCACA,uBAAIb,EAAOc,YACX,oCACA,uBAAId,EAAOe,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,gBAGlD,iBAAKzB,UAAWgB,EAAhB,WACI,oDACA,2BACE,yBACE,SAAC,KAAD,CACEU,GAAE,kBAAajB,EAAQkB,SAArB,SADJ,qBAOF,yBACE,SAAC,KAAD,CACED,GAAE,kBAAajB,EAAQkB,SAArB,YADJ,8BASR,SAAC,EAAAC,SAAD,CAAUC,UAAU,kJAApB,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,oBAAoBC,SAAS,SAAC7B,EAAD,OACzC,SAAC,KAAD,CAAO4B,KAAK,WAAWC,SAAS,SAAC3B,EAAD,IAAYG,OAAQA,gB,kBC3DpE,IAAMyB,EAAW,+BACXC,EAAM,mCAyDZ,IAAMrB,EAAM,CACRsB,oBAxDJ,WAEI,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAOpB,MAAK,SAAAC,GAC/D,OAAIA,EAASsB,GACJtB,EAASuB,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,gCAkD1BC,mBA9CJ,SAA6BhC,GAEzB,OAAO0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAQkB,SAA9B,oBAAkDM,EAAlD,oBAAwEpB,MAAK,SAAAC,GACrF,OAAIA,EAASsB,GACJtB,EAASuB,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,gCAwC1BE,iBApCJ,SAA2BC,GAEvB,OAAOR,MAAM,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,iCAAiEU,EAAjE,gCAA2G9B,MAAK,SAAAC,GACxH,OAAIA,EAASsB,GACJtB,EAASuB,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,gCA8B1BI,eA1BJ,SAAyBnC,GAErB,OAAO0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAtB,4BAAiDwB,EAAjD,oBAAuEpB,MAAK,SAAAC,GACpF,OAAIA,EAASsB,GACJtB,EAASuB,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,iCAsB9B","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"MovieDetailsPage_box__qdKuD\",\"description\":\"MovieDetailsPage_description__JSzNh\",\"additional\":\"MovieDetailsPage_additional__Fty3l\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Link, Route, Routes} from 'react-router-dom';\nimport api from \"services/movies-api\"\nimport PageHeading from \"components/PageHeading/PageHeading\"\nimport s from \"./MovieDetailsPage.module.css\"\n\n\nconst Cast = lazy(() => import('./Cast/Cast' /*webpackChunkName: \"cast\" */))\nconst Reviews = lazy(() => import('./Reviews/Reviews' /*webpackChunkName: \"reviews\" */))\n\nexport default function MovieDetailsPage(){\n    const [movies, setMovies] = useState()\n    const movieId = useParams()\n    // const location = useLocation()\n\n    useEffect(() => {\n        api.fetchMoviesDetails(movieId).then(response => setMovies(response))\n    }, [movieId])\n\n    return (\n        <>\n        {movies && (\n        <>\n        <PageHeading text={movies.title}/>\n        <div className={s.box}>\n        <img src={`https://image.tmdb.org/t/p/w342${movies.poster_path}`} alt={movies.title} />\n        <div className={s.description}>\n            <h2>{movies.title}</h2>\n              <p>User Score: {movies.vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movies.overview}</p>\n              <h4>Genres</h4>\n              <p>{movies.genres.map(genre => genre.name + ' ')}</p>\n        </div>\n        </div>\n        <div className={s.additional}>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <Link\n                  to={`/movies/${movieId.moviesId}/cast`}\n                >\n                  Cast\n                </Link>\n              </li>\n\n              <li>\n                <Link\n                  to={`/movies/${movieId.moviesId}/reviews`}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        \n        <Suspense fallback={<h1>тут должен быть лоадер</h1>}>\n            <Routes>\n                <Route path='/movies/:moviesId' element={<Cast/>} />\n                <Route path='/reviews' element={<Reviews/>} movies={movies}/>\n            </Routes>\n        </Suspense>\n        \n\n        </>\n        )}\n \n        </>\n\n    )\n}","const BASE_URL = 'https://api.themoviedb.org/3'\nconst KEY = '8f3b565dfa705a44083795264ed307ec'\n\nfunction fetchTrendingMovies () {\n\n    return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n    \n        return Promise.reject(new Error(`Something went wrong :(`));\n    });\n}\n\nfunction fetchMoviesDetails (movieId) {\n\n    return fetch(`${BASE_URL}/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n    \n        return Promise.reject(new Error(`Something went wrong :(`));\n    });\n}\n\nfunction fetchSearchMovie (searchQuery) {\n\n    return fetch(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n    \n        return Promise.reject(new Error(`Something went wrong :(`));\n    });\n}\n\nfunction fetchMovieCast (movieId) {\n\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n    \n        return Promise.reject(new Error(`Something went wrong :(`));\n    });\n}\n\n// function fetchMovieReviews (movieId) {\n\n//     return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`).then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n    \n//         return Promise.reject(new Error(`Something went wrong :(`));\n//     });\n// }\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n};\n  \nexport default api;"],"names":["PageHeading","text","className","styles","Cast","lazy","Reviews","MovieDetailsPage","useState","movies","setMovies","movieId","useParams","useEffect","api","then","response","title","s","src","poster_path","alt","vote_average","overview","genres","map","genre","name","to","moviesId","Suspense","fallback","path","element","BASE_URL","KEY","fetchTrendingMovies","fetch","ok","json","Promise","reject","Error","fetchMoviesDetails","fetchSearchMovie","searchQuery","fetchMovieCast"],"sourceRoot":""}